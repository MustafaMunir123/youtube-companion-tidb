"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-international";
exports.ids = ["vendor-chunks/next-international"];
exports.modules = {

/***/ "(ssr)/./node_modules/next-international/dist/app/client/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/next-international/dist/app/client/index.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/app/client/index.ts\nvar client_exports = {};\n__export(client_exports, {\n  createI18nClient: () => createI18nClient\n});\nmodule.exports = __toCommonJS(client_exports);\nvar import_client_only = __webpack_require__(/*! client-only */ \"(ssr)/./node_modules/next/dist/compiled/client-only/index.js\");\n\n// src/app/client/create-i18n-provider-client.tsx\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\n\n// src/common/flatten-locale.ts\nvar flattenLocale = (locale, prefix = \"\") => Object.entries(locale).reduce(\n  (prev, [name, value]) => __spreadValues(__spreadValues({}, prev), typeof value === \"string\" ? { [prefix + name]: value } : flattenLocale(value, `${prefix}${name}.`)),\n  {}\n);\n\n// src/app/client/create-i18n-provider-client.tsx\nfunction createI18nProviderClient(I18nClientContext, locales, useCurrentLocale) {\n  return function I18nProviderClient({\n    locale: baseLocale,\n    fallback = null,\n    fallbackLocale,\n    children,\n    config\n  }) {\n    const locale = useCurrentLocale(config);\n    const [clientLocale, setClientLocale] = (0, import_react.useState)();\n    const loadLocale = (0, import_react.useCallback)((locale2) => {\n      locales[locale2]().then((content) => {\n        setClientLocale(flattenLocale(content.default));\n      });\n    }, []);\n    (0, import_react.useEffect)(() => {\n      loadLocale(baseLocale);\n    }, [baseLocale, loadLocale]);\n    const value = (0, import_react.useMemo)(\n      () => ({\n        localeContent: clientLocale || baseLocale,\n        fallbackLocale: fallbackLocale ? flattenLocale(fallbackLocale) : void 0,\n        locale\n      }),\n      [clientLocale, baseLocale, fallbackLocale, locale]\n    );\n    if (!clientLocale && fallback) {\n      return fallback;\n    }\n    return /* @__PURE__ */ import_react.default.createElement(I18nClientContext.Provider, { value }, children);\n  };\n}\n\n// src/app/client/index.ts\nvar import_react6 = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n// src/common/create-use-i18n.ts\nvar import_react3 = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n// src/common/create-t.ts\nvar import_react2 = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nfunction createT(context, scope) {\n  const { localeContent, fallbackLocale } = context;\n  const content = fallbackLocale && typeof localeContent === \"string\" ? fallbackLocale : Object.assign(fallbackLocale != null ? fallbackLocale : {}, localeContent);\n  const pluralKeys = new Set(\n    Object.keys(content).filter((key) => key.includes(\"#\")).map((key) => key.split(\"#\")[0])\n  );\n  const pluralRules = new Intl.PluralRules(context.locale);\n  function t(key, ...params) {\n    var _a, _b;\n    const paramObject = params[0];\n    let isPlural = false;\n    if (paramObject && \"count\" in paramObject) {\n      const isPluralKey = scope ? pluralKeys.has(`${scope}.${key}`) : pluralKeys.has(key);\n      if (isPluralKey) {\n        key = `${key}#${pluralRules.select(paramObject.count)}`;\n        isPlural = true;\n      }\n    }\n    let value = scope ? content[`${scope}.${key}`] : content[key];\n    if (!value && isPlural) {\n      const baseKey = key.split(\"#\")[0];\n      value = (_a = content[`${baseKey}#other`] || key) == null ? void 0 : _a.toString();\n    } else {\n      value = (_b = value || key) == null ? void 0 : _b.toString();\n    }\n    if (!paramObject) {\n      return value;\n    }\n    let isString = true;\n    const result = value == null ? void 0 : value.split(/({[^}]*})/).map((part, index) => {\n      const match = part.match(/{(.*)}/);\n      if (match) {\n        const param = match[1];\n        const paramValue = paramObject[param];\n        if (typeof paramValue !== \"string\")\n          isString = false;\n        return (0, import_react2.isValidElement)(paramValue) ? (0, import_react2.cloneElement)(paramValue, { key: `${String(param)}-${index}` }) : paramValue;\n      }\n      return part;\n    });\n    return isString ? result == null ? void 0 : result.join(\"\") : result;\n  }\n  return t;\n}\n\n// src/common/create-use-i18n.ts\nfunction createUsei18n(I18nClientContext) {\n  return function useI18n() {\n    const context = (0, import_react3.useContext)(I18nClientContext);\n    if (!context) {\n      throw new Error(\"`useI18n` must be used inside `I18nProvider`\");\n    }\n    return createT(context, void 0);\n  };\n}\n\n// src/common/create-use-scoped-i18n.ts\nvar import_react4 = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nfunction createScopedUsei18n(I18nClientContext) {\n  return function useScopedI18n(scope) {\n    const context = (0, import_react4.useContext)(I18nClientContext);\n    if (!context) {\n      throw new Error(\"`useI18n` must be used inside `I18nProvider`\");\n    }\n    return createT(context, scope);\n  };\n}\n\n// src/app/client/create-use-change-locale.ts\nvar import_navigation = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\nfunction createUseChangeLocale(locales) {\n  return function useChangeLocale(config) {\n    const { push, refresh } = (0, import_navigation.useRouter)();\n    const path = (0, import_navigation.usePathname)();\n    const searchParams = (0, import_navigation.useSearchParams)();\n    let pathWithoutLocale = path;\n    if (config == null ? void 0 : config.basePath) {\n      pathWithoutLocale = pathWithoutLocale.replace(config.basePath, \"\");\n    }\n    locales.forEach((locale) => {\n      pathWithoutLocale = pathWithoutLocale.replace(`/${locale}`, \"\");\n    });\n    return function changeLocale(newLocale) {\n      const search = searchParams.toString();\n      push(`/${newLocale}${pathWithoutLocale}${search ? `?${search}` : \"\"}`);\n      refresh();\n    };\n  };\n}\n\n// src/common/create-define-locale.ts\nfunction createDefineLocale() {\n  return function defineLocale(locale) {\n    return locale;\n  };\n}\n\n// src/app/client/create-use-current-locale.ts\nvar import_navigation2 = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\nvar import_react5 = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n// src/common/constants.ts\nvar DEFAULT_SEGMENT_NAME = \"locale\";\n\n// src/app/client/create-use-current-locale.ts\nfunction createUseCurrentLocale(locales) {\n  return function useCurrentLocale(config) {\n    var _a;\n    const params = (0, import_navigation2.useParams)();\n    const segment = params[(_a = config == null ? void 0 : config.segmentName) != null ? _a : DEFAULT_SEGMENT_NAME];\n    return (0, import_react5.useMemo)(() => {\n      for (const locale of locales) {\n        if (segment === locale) {\n          return locale;\n        }\n      }\n      throw new Error(\"Locale not found\");\n    }, [segment]);\n  };\n}\n\n// src/app/client/index.ts\nfunction createI18nClient(locales) {\n  const localesKeys = Object.keys(locales);\n  const I18nClientContext = (0, import_react6.createContext)(null);\n  const useCurrentLocale = createUseCurrentLocale(localesKeys);\n  const I18nProviderClient = createI18nProviderClient(\n    I18nClientContext,\n    locales,\n    useCurrentLocale\n  );\n  const useI18n = createUsei18n(I18nClientContext);\n  const useScopedI18n = createScopedUsei18n(I18nClientContext);\n  const useChangeLocale = createUseChangeLocale(localesKeys);\n  const defineLocale = createDefineLocale();\n  return {\n    useI18n,\n    useScopedI18n,\n    I18nProviderClient,\n    I18nClientContext,\n    useChangeLocale,\n    defineLocale,\n    useCurrentLocale\n  };\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-international/dist/app/client/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-international/dist/app/server/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/next-international/dist/app/server/index.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/app/server/index.ts\nvar server_exports = {};\n__export(server_exports, {\n  createI18nServer: () => createI18nServer\n});\nmodule.exports = __toCommonJS(server_exports);\nvar import_server_only = __webpack_require__(/*! server-only */ \"(rsc)/./node_modules/next/dist/compiled/server-only/empty.js\");\n\n// src/common/create-t.ts\nvar import_react = __webpack_require__(/*! react */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\");\nfunction createT(context, scope) {\n  const { localeContent, fallbackLocale } = context;\n  const content = fallbackLocale && typeof localeContent === \"string\" ? fallbackLocale : Object.assign(fallbackLocale != null ? fallbackLocale : {}, localeContent);\n  const pluralKeys = new Set(\n    Object.keys(content).filter((key) => key.includes(\"#\")).map((key) => key.split(\"#\")[0])\n  );\n  const pluralRules = new Intl.PluralRules(context.locale);\n  function t(key, ...params) {\n    var _a, _b;\n    const paramObject = params[0];\n    let isPlural = false;\n    if (paramObject && \"count\" in paramObject) {\n      const isPluralKey = scope ? pluralKeys.has(`${scope}.${key}`) : pluralKeys.has(key);\n      if (isPluralKey) {\n        key = `${key}#${pluralRules.select(paramObject.count)}`;\n        isPlural = true;\n      }\n    }\n    let value = scope ? content[`${scope}.${key}`] : content[key];\n    if (!value && isPlural) {\n      const baseKey = key.split(\"#\")[0];\n      value = (_a = content[`${baseKey}#other`] || key) == null ? void 0 : _a.toString();\n    } else {\n      value = (_b = value || key) == null ? void 0 : _b.toString();\n    }\n    if (!paramObject) {\n      return value;\n    }\n    let isString = true;\n    const result = value == null ? void 0 : value.split(/({[^}]*})/).map((part, index) => {\n      const match = part.match(/{(.*)}/);\n      if (match) {\n        const param = match[1];\n        const paramValue = paramObject[param];\n        if (typeof paramValue !== \"string\")\n          isString = false;\n        return (0, import_react.isValidElement)(paramValue) ? (0, import_react.cloneElement)(paramValue, { key: `${String(param)}-${index}` }) : paramValue;\n      }\n      return part;\n    });\n    return isString ? result == null ? void 0 : result.join(\"\") : result;\n  }\n  return t;\n}\n\n// src/app/server/get-locale-cache.tsx\nvar import_headers = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\nvar import_react2 = __webpack_require__(/*! react */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\");\n\n// src/common/constants.ts\nvar LOCALE_HEADER = \"X-Next-Locale\";\nvar LOCALE_COOKIE = \"Next-Locale\";\nvar DEFAULT_SEGMENT_NAME = \"locale\";\n\n// src/app/server/get-locale-cache.tsx\nvar getLocaleCache = (0, import_react2.cache)(() => {\n  var _a;\n  let locale;\n  locale = (0, import_headers.headers)().get(LOCALE_HEADER);\n  if (!locale) {\n    locale = (_a = (0, import_headers.cookies)().get(LOCALE_COOKIE)) == null ? void 0 : _a.value;\n  }\n  if (!locale) {\n    throw new Error(\"Could not get the locale from the headers or cookies.\");\n  }\n  return locale;\n});\n\n// src/common/flatten-locale.ts\nvar flattenLocale = (locale, prefix = \"\") => Object.entries(locale).reduce(\n  (prev, [name, value]) => __spreadValues(__spreadValues({}, prev), typeof value === \"string\" ? { [prefix + name]: value } : flattenLocale(value, `${prefix}${name}.`)),\n  {}\n);\n\n// src/app/server/create-get-i18n.ts\nfunction createGetI18n(locales) {\n  return function getI18n() {\n    return __async(this, null, function* () {\n      const locale = getLocaleCache();\n      return createT(\n        {\n          localeContent: flattenLocale((yield locales[locale]()).default),\n          fallbackLocale: void 0,\n          locale\n        },\n        void 0\n      );\n    });\n  };\n}\n\n// src/app/server/create-get-scoped-i18n.ts\nfunction createGetScopedI18n(locales) {\n  return function getScopedI18n(scope) {\n    return __async(this, null, function* () {\n      const locale = getLocaleCache();\n      return createT(\n        {\n          localeContent: flattenLocale((yield locales[locale]()).default),\n          fallbackLocale: void 0,\n          locale\n        },\n        scope\n      );\n    });\n  };\n}\n\n// src/app/server/create-get-current-locale.ts\nfunction createGetCurrentLocale() {\n  return function getCurrentLocale() {\n    return getLocaleCache();\n  };\n}\n\n// src/app/server/create-get-static-params.ts\nfunction createGetStaticParams(locales) {\n  return function getStaticParams(config) {\n    return Object.keys(locales).map((locale) => {\n      var _a;\n      return {\n        [(_a = config == null ? void 0 : config.segmentName) != null ? _a : DEFAULT_SEGMENT_NAME]: locale\n      };\n    });\n  };\n}\n\n// src/app/server/index.ts\nfunction createI18nServer(locales) {\n  const getI18n = createGetI18n(locales);\n  const getScopedI18n = createGetScopedI18n(locales);\n  const getCurrentLocale = createGetCurrentLocale();\n  const getStaticParams = createGetStaticParams(locales);\n  return {\n    getI18n,\n    getScopedI18n,\n    getCurrentLocale,\n    getStaticParams\n  };\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-international/dist/app/server/index.js\n");

/***/ })

};
;